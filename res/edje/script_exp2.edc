#define MY_OFFSET_DEFAULT 000
#define MY_OFFSET_LEFT -200
styles {
   style { name: "text_style";
      	   base: "font=Tizen:style=Regular font_size=25 color=#ffffff ellipsis=1.0";
   }
}

collections {
   base_scale: 1.0;
   group { name: "main";
      script {
         public down_x = 0, down_y = 0;
         public dir_move = 0;
         public page_width = 0;
         public show_geometry(){
            /* get field geometry */
            new fx, fy, fw, fh;
            get_geometry(PART:"main_page", fx, fy, fw, fh);
            set_int(page_width,fw);
            new buf[128];
            snprintf(buf, sizeof(buf),"x=%d y=%d w=%d h=%d",fx, fy, fw, fh);
            set_text(PART:"label2", buf);
         }
         public left_page_move(dx) {
            custom_state(PART:"left_page", "default", 0.0);
            set_state_val(PART:"left_page", STATE_REL1_OFFSET, dx+MY_OFFSET_DEFAULT,0);
            set_state_val(PART:"left_page", STATE_REL2_OFFSET, dx+MY_OFFSET_DEFAULT,0);
            //    set_state_val(PART:"right_bottom_point_base", STATE_REL2_OFFSET, 100, 150);
            set_state(PART:"left_page", "custom", 0.0);           
         }
         public main_page_move(dx) {
            custom_state(PART:"main_page", "default", 0.0);
            set_state_val(PART:"main_page", STATE_REL1_OFFSET, dx+MY_OFFSET_DEFAULT,0);
            set_state_val(PART:"main_page", STATE_REL2_OFFSET, dx+MY_OFFSET_DEFAULT,0);
            //    set_state_val(PART:"right_bottom_point_base", STATE_REL2_OFFSET, 100, 150);
            set_state(PART:"main_page", "custom", 0.0);           
         }         
      }
      parts {
         part { name: "main_page";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               rel1.relative: 0.1 0.1;
               rel2.relative: 0.9 0.9;
               color: 255 255 255 255;
            }
            description { state: "left" 1.0;
               rel1.relative: -0.7 0.1;
               rel2.relative: 0.1 0.9;
               color: 255 255 255 128;
            }

         }
         part { name: "top_rect";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 40;
               fixed: 0 1;
               rel1.relative: 0.0 0.0;
               rel2.relative: 1.0 0.0;
               align: 0.5 0.0;
               color: 128 128 128 128;
            }
         }         
         part { name: "label";
            type: TEXT;
            description { state: "default" 0.0;
               color: 255 255 255 255;
               rel1.to: "top_rect";
               rel2.to: "top_rect";
               text {
                  text: "label";
                  font: "Sans";
                  size: 20;
                  align: 0.5 0.0;
               }
            }
         }
         part { name: "label2";
            type: TEXT;
            description { state: "default" 0.0;
               color: 0 0 0 255;
               rel1.to: "bottom_rect";
               rel2.to: "bottom_rect";
               text {
                  text: "label2";
                  font: "Sans";
                  size: 20;
                  align: 0.5 1.0;
               }
            }
         }
         part { name: "left_page";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               rel1.relative: -0.7 0.1;
               rel2.relative: 0.1 0.9;
               color: 255 0 255 128;
            }
            description { state: "center" 1.0;
               rel1.relative: 0.1 0.1;
               rel2.relative: 0.9 0.9;
               color: 255 0 255 128;
            }
         }
         part { name: "text_sample";
            type: TEXT;
            description { state: "default" 0.0;
               color: 255 255 255 255;
               rel1.to: "left_page";
               rel2.to: "left_page";
               text {
                  text: "text_sample";
                  font: "Sans";
                  size: 20;
                  align: 0.5 0.5;
               }
            }
         }         
         part { name: "text";
            type: TEXTBLOCK;
            description { state: "default" 0.0;
               color: 0 0 0 255;
               align: 0.5 0.5;
               rel1.to: "main_page";
               rel2.to: "main_page";
               text 
               {
                  style: "text_style";
                  text: "Text Text Text<br>text<br>text";
               }
            }
         }
         part { name: "bottom_rect";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: 10 300;
               fixed: 0 1;
               rel1.relative: 0.0 1.0;
               rel2.relative: 1.0 1.0;
               align: 0.0 1.0;
               color: 255 255 255 64;
            }
         }
      }
      program { name: "main_page_goto_default";
         action: STATE_SET "default" 0.0;
         target: "main_page";
         transition: SINUSOIDAL 0.2;
      }
      program { name: "main_page_goto_center";
         action: STATE_SET "left" 1.0;
         target: "main_page";
         transition: SINUSOIDAL 0.2;
      }

      program { name: "left_page_goto_default";
         action: STATE_SET "default" 0.0;
         target: "left_page";
         transition: SINUSOIDAL 0.2;
      }
      program { name: "left_page_goto_center";
         action: STATE_SET "center" 1.0;
         target: "left_page";
         transition: SINUSOIDAL 0.2;
      }
      program { name: "test mouse down";
         signal: "mouse,down,1";
         source: "bottom_rect";
         script {
            new mx, my;
            get_mouse(mx, my);
            set_int(down_x, mx);
            set_int(down_y, my);
            set_text(PART:"label", "mouse,down");
            show_geometry();
           // run_program(PROGRAM:"");
         }
      }
      program { name: "test mouse up";
         signal: "mouse,up,1";
         source: "bottom_rect";
         script {
            set_text(PART:"label", "mouse,up");

            new mx, my, dx;
            get_mouse(mx, my);
            dx = -(mx - get_int(down_x));
            if (get_int(dir_move) > 0) {
               if (2*dx < get_int(page_width))
               run_program(PROGRAM:"left_page_goto_default");
               else
               run_program(PROGRAM:"left_page_goto_center");
            }
            else {
               if (2*dx < get_int(page_width))
               run_program(PROGRAM:"main_page_goto_default");
               else
               run_program(PROGRAM:"main_page_goto_center");               
            }



            set_int(down_x, 0);
            set_int(down_y, 0);
            set_int(dir_move,0);
         }
      }
      program { name: "test mouse move";
         signal: "mouse,move";
         source: "bottom_rect";
         script {       
            new x0;
            x0 = get_int(down_x);
            if (x0 == 0) return ;
            new mx, my, dx;
            get_mouse(mx, my);
            dx = mx - x0;
            if (get_int(dir_move)==0) {
               if (dx>0) set_int(dir_move,1)
               else set_int(dir_move,-1);
            }
            new buf[128];
            snprintf(buf, sizeof(buf),"mouse: %d %d",get_int(dir_move), dx);
            set_text(PART:"label", buf);
            if (get_int(dir_move) > 0)
            left_page_move(dx);
            else 
            main_page_move(dx);
         }
      }
   }